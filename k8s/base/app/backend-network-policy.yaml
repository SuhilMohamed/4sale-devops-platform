---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: task-backend-network-policy
  namespace: task-app
  labels:
    app: task-backend
    app.kubernetes.io/name: task-backend
    app.kubernetes.io/component: network-policy
    app.kubernetes.io/part-of: task-management
spec:
  podSelector:
    matchLabels:
      app: task-backend
  
  policyTypes:
  - Ingress
  - Egress
  
  # Ingress rules - what can connect to the backend
  ingress:
  # Allow traffic from frontend pods
  - from:
    - namespaceSelector:
        matchLabels:
          name: task-app
      podSelector:
        matchLabels:
          app: task-frontend
    ports:
    - protocol: TCP
      port: 3000
  
  # Allow traffic from ingress controller
  - from:
    - namespaceSelector:
        matchLabels:
          name: ingress-nginx
    ports:
    - protocol: TCP
      port: 3000
  
  # Allow monitoring scraping from Prometheus
  - from:
    - namespaceSelector:
        matchLabels:
          name: monitoring
      podSelector:
        matchLabels:
          app.kubernetes.io/name: prometheus
    ports:
    - protocol: TCP
      port: 3000
  
  # Allow health checks from load balancer
  - from: []
    ports:
    - protocol: TCP
      port: 3000
  
  # Egress rules - what the backend can connect to
  egress:
  # Allow DNS resolution
  - to: []
    ports:
    - protocol: UDP
      port: 53
    - protocol: TCP
      port: 53
  
  # Allow connection to PostgreSQL database
  - to:
    - namespaceSelector:
        matchLabels:
          name: database
      podSelector:
        matchLabels:
          app: postgres
    ports:
    - protocol: TCP
      port: 5432
  
  # Allow connection to Jaeger for tracing
  - to:
    - namespaceSelector:
        matchLabels:
          name: monitoring
      podSelector:
        matchLabels:
          app.kubernetes.io/name: jaeger
    ports:
    - protocol: TCP
      port: 14268
    - protocol: TCP
      port: 14250
  
  # Allow HTTPS outbound for external APIs (if needed)
  - to: []
    ports:
    - protocol: TCP
      port: 443
  
  # Allow HTTP outbound for external APIs (if needed)
  - to: []
    ports:
    - protocol: TCP
      port: 80
